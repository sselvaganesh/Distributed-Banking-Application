// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bank.proto

package bank

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InitBranch struct {
	Balance              uint32               `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	AllBranches          []*InitBranch_Branch `protobuf:"bytes,2,rep,name=all_branches,json=allBranches,proto3" json:"all_branches,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InitBranch) Reset()         { *m = InitBranch{} }
func (m *InitBranch) String() string { return proto.CompactTextString(m) }
func (*InitBranch) ProtoMessage()    {}
func (*InitBranch) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{0}
}

func (m *InitBranch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitBranch.Unmarshal(m, b)
}
func (m *InitBranch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitBranch.Marshal(b, m, deterministic)
}
func (m *InitBranch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitBranch.Merge(m, src)
}
func (m *InitBranch) XXX_Size() int {
	return xxx_messageInfo_InitBranch.Size(m)
}
func (m *InitBranch) XXX_DiscardUnknown() {
	xxx_messageInfo_InitBranch.DiscardUnknown(m)
}

var xxx_messageInfo_InitBranch proto.InternalMessageInfo

func (m *InitBranch) GetBalance() uint32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *InitBranch) GetAllBranches() []*InitBranch_Branch {
	if m != nil {
		return m.AllBranches
	}
	return nil
}

type InitBranch_Branch struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitBranch_Branch) Reset()         { *m = InitBranch_Branch{} }
func (m *InitBranch_Branch) String() string { return proto.CompactTextString(m) }
func (*InitBranch_Branch) ProtoMessage()    {}
func (*InitBranch_Branch) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{0, 0}
}

func (m *InitBranch_Branch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitBranch_Branch.Unmarshal(m, b)
}
func (m *InitBranch_Branch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitBranch_Branch.Marshal(b, m, deterministic)
}
func (m *InitBranch_Branch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitBranch_Branch.Merge(m, src)
}
func (m *InitBranch_Branch) XXX_Size() int {
	return xxx_messageInfo_InitBranch_Branch.Size(m)
}
func (m *InitBranch_Branch) XXX_DiscardUnknown() {
	xxx_messageInfo_InitBranch_Branch.DiscardUnknown(m)
}

var xxx_messageInfo_InitBranch_Branch proto.InternalMessageInfo

func (m *InitBranch_Branch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InitBranch_Branch) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *InitBranch_Branch) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Transfer struct {
	SrcBranch            string   `protobuf:"bytes,1,opt,name=src_branch,json=srcBranch,proto3" json:"src_branch,omitempty"`
	DstBranch            string   `protobuf:"bytes,2,opt,name=dst_branch,json=dstBranch,proto3" json:"dst_branch,omitempty"`
	Money                uint32   `protobuf:"varint,3,opt,name=money,proto3" json:"money,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transfer) Reset()         { *m = Transfer{} }
func (m *Transfer) String() string { return proto.CompactTextString(m) }
func (*Transfer) ProtoMessage()    {}
func (*Transfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{1}
}

func (m *Transfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transfer.Unmarshal(m, b)
}
func (m *Transfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transfer.Marshal(b, m, deterministic)
}
func (m *Transfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transfer.Merge(m, src)
}
func (m *Transfer) XXX_Size() int {
	return xxx_messageInfo_Transfer.Size(m)
}
func (m *Transfer) XXX_DiscardUnknown() {
	xxx_messageInfo_Transfer.DiscardUnknown(m)
}

var xxx_messageInfo_Transfer proto.InternalMessageInfo

func (m *Transfer) GetSrcBranch() string {
	if m != nil {
		return m.SrcBranch
	}
	return ""
}

func (m *Transfer) GetDstBranch() string {
	if m != nil {
		return m.DstBranch
	}
	return ""
}

func (m *Transfer) GetMoney() uint32 {
	if m != nil {
		return m.Money
	}
	return 0
}

type InitSnapshot struct {
	SnapshotId           uint32   `protobuf:"varint,1,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitSnapshot) Reset()         { *m = InitSnapshot{} }
func (m *InitSnapshot) String() string { return proto.CompactTextString(m) }
func (*InitSnapshot) ProtoMessage()    {}
func (*InitSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{2}
}

func (m *InitSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitSnapshot.Unmarshal(m, b)
}
func (m *InitSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitSnapshot.Marshal(b, m, deterministic)
}
func (m *InitSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitSnapshot.Merge(m, src)
}
func (m *InitSnapshot) XXX_Size() int {
	return xxx_messageInfo_InitSnapshot.Size(m)
}
func (m *InitSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_InitSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_InitSnapshot proto.InternalMessageInfo

func (m *InitSnapshot) GetSnapshotId() uint32 {
	if m != nil {
		return m.SnapshotId
	}
	return 0
}

type Marker struct {
	SrcBranch            string   `protobuf:"bytes,1,opt,name=src_branch,json=srcBranch,proto3" json:"src_branch,omitempty"`
	DstBranch            string   `protobuf:"bytes,2,opt,name=dst_branch,json=dstBranch,proto3" json:"dst_branch,omitempty"`
	SnapshotId           uint32   `protobuf:"varint,3,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Marker) Reset()         { *m = Marker{} }
func (m *Marker) String() string { return proto.CompactTextString(m) }
func (*Marker) ProtoMessage()    {}
func (*Marker) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{3}
}

func (m *Marker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Marker.Unmarshal(m, b)
}
func (m *Marker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Marker.Marshal(b, m, deterministic)
}
func (m *Marker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Marker.Merge(m, src)
}
func (m *Marker) XXX_Size() int {
	return xxx_messageInfo_Marker.Size(m)
}
func (m *Marker) XXX_DiscardUnknown() {
	xxx_messageInfo_Marker.DiscardUnknown(m)
}

var xxx_messageInfo_Marker proto.InternalMessageInfo

func (m *Marker) GetSrcBranch() string {
	if m != nil {
		return m.SrcBranch
	}
	return ""
}

func (m *Marker) GetDstBranch() string {
	if m != nil {
		return m.DstBranch
	}
	return ""
}

func (m *Marker) GetSnapshotId() uint32 {
	if m != nil {
		return m.SnapshotId
	}
	return 0
}

type RetrieveSnapshot struct {
	SnapshotId           uint32   `protobuf:"varint,1,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetrieveSnapshot) Reset()         { *m = RetrieveSnapshot{} }
func (m *RetrieveSnapshot) String() string { return proto.CompactTextString(m) }
func (*RetrieveSnapshot) ProtoMessage()    {}
func (*RetrieveSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{4}
}

func (m *RetrieveSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveSnapshot.Unmarshal(m, b)
}
func (m *RetrieveSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveSnapshot.Marshal(b, m, deterministic)
}
func (m *RetrieveSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveSnapshot.Merge(m, src)
}
func (m *RetrieveSnapshot) XXX_Size() int {
	return xxx_messageInfo_RetrieveSnapshot.Size(m)
}
func (m *RetrieveSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveSnapshot proto.InternalMessageInfo

func (m *RetrieveSnapshot) GetSnapshotId() uint32 {
	if m != nil {
		return m.SnapshotId
	}
	return 0
}

type ReturnSnapshot struct {
	LocalSnapshot        *ReturnSnapshot_LocalSnapshot `protobuf:"bytes,1,opt,name=local_snapshot,json=localSnapshot,proto3" json:"local_snapshot,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ReturnSnapshot) Reset()         { *m = ReturnSnapshot{} }
func (m *ReturnSnapshot) String() string { return proto.CompactTextString(m) }
func (*ReturnSnapshot) ProtoMessage()    {}
func (*ReturnSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{5}
}

func (m *ReturnSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnSnapshot.Unmarshal(m, b)
}
func (m *ReturnSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnSnapshot.Marshal(b, m, deterministic)
}
func (m *ReturnSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnSnapshot.Merge(m, src)
}
func (m *ReturnSnapshot) XXX_Size() int {
	return xxx_messageInfo_ReturnSnapshot.Size(m)
}
func (m *ReturnSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnSnapshot proto.InternalMessageInfo

func (m *ReturnSnapshot) GetLocalSnapshot() *ReturnSnapshot_LocalSnapshot {
	if m != nil {
		return m.LocalSnapshot
	}
	return nil
}

type ReturnSnapshot_LocalSnapshot struct {
	SnapshotId           uint32   `protobuf:"varint,1,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	Balance              uint32   `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	ChannelState         []uint32 `protobuf:"varint,3,rep,packed,name=channel_state,json=channelState,proto3" json:"channel_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReturnSnapshot_LocalSnapshot) Reset()         { *m = ReturnSnapshot_LocalSnapshot{} }
func (m *ReturnSnapshot_LocalSnapshot) String() string { return proto.CompactTextString(m) }
func (*ReturnSnapshot_LocalSnapshot) ProtoMessage()    {}
func (*ReturnSnapshot_LocalSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{5, 0}
}

func (m *ReturnSnapshot_LocalSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReturnSnapshot_LocalSnapshot.Unmarshal(m, b)
}
func (m *ReturnSnapshot_LocalSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReturnSnapshot_LocalSnapshot.Marshal(b, m, deterministic)
}
func (m *ReturnSnapshot_LocalSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReturnSnapshot_LocalSnapshot.Merge(m, src)
}
func (m *ReturnSnapshot_LocalSnapshot) XXX_Size() int {
	return xxx_messageInfo_ReturnSnapshot_LocalSnapshot.Size(m)
}
func (m *ReturnSnapshot_LocalSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_ReturnSnapshot_LocalSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_ReturnSnapshot_LocalSnapshot proto.InternalMessageInfo

func (m *ReturnSnapshot_LocalSnapshot) GetSnapshotId() uint32 {
	if m != nil {
		return m.SnapshotId
	}
	return 0
}

func (m *ReturnSnapshot_LocalSnapshot) GetBalance() uint32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *ReturnSnapshot_LocalSnapshot) GetChannelState() []uint32 {
	if m != nil {
		return m.ChannelState
	}
	return nil
}

type BranchMessage struct {
	// Types that are valid to be assigned to BranchMessage:
	//	*BranchMessage_InitBranch
	//	*BranchMessage_Transfer
	//	*BranchMessage_InitSnapshot
	//	*BranchMessage_Marker
	//	*BranchMessage_RetrieveSnapshot
	//	*BranchMessage_ReturnSnapshot
	BranchMessage        isBranchMessage_BranchMessage `protobuf_oneof:"branch_message"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BranchMessage) Reset()         { *m = BranchMessage{} }
func (m *BranchMessage) String() string { return proto.CompactTextString(m) }
func (*BranchMessage) ProtoMessage()    {}
func (*BranchMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6371916d5cb63b4, []int{6}
}

func (m *BranchMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BranchMessage.Unmarshal(m, b)
}
func (m *BranchMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BranchMessage.Marshal(b, m, deterministic)
}
func (m *BranchMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BranchMessage.Merge(m, src)
}
func (m *BranchMessage) XXX_Size() int {
	return xxx_messageInfo_BranchMessage.Size(m)
}
func (m *BranchMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BranchMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BranchMessage proto.InternalMessageInfo

type isBranchMessage_BranchMessage interface {
	isBranchMessage_BranchMessage()
}

type BranchMessage_InitBranch struct {
	InitBranch *InitBranch `protobuf:"bytes,1,opt,name=init_branch,json=initBranch,proto3,oneof"`
}

type BranchMessage_Transfer struct {
	Transfer *Transfer `protobuf:"bytes,2,opt,name=transfer,proto3,oneof"`
}

type BranchMessage_InitSnapshot struct {
	InitSnapshot *InitSnapshot `protobuf:"bytes,3,opt,name=init_snapshot,json=initSnapshot,proto3,oneof"`
}

type BranchMessage_Marker struct {
	Marker *Marker `protobuf:"bytes,4,opt,name=marker,proto3,oneof"`
}

type BranchMessage_RetrieveSnapshot struct {
	RetrieveSnapshot *RetrieveSnapshot `protobuf:"bytes,5,opt,name=retrieve_snapshot,json=retrieveSnapshot,proto3,oneof"`
}

type BranchMessage_ReturnSnapshot struct {
	ReturnSnapshot *ReturnSnapshot `protobuf:"bytes,6,opt,name=return_snapshot,json=returnSnapshot,proto3,oneof"`
}

func (*BranchMessage_InitBranch) isBranchMessage_BranchMessage() {}

func (*BranchMessage_Transfer) isBranchMessage_BranchMessage() {}

func (*BranchMessage_InitSnapshot) isBranchMessage_BranchMessage() {}

func (*BranchMessage_Marker) isBranchMessage_BranchMessage() {}

func (*BranchMessage_RetrieveSnapshot) isBranchMessage_BranchMessage() {}

func (*BranchMessage_ReturnSnapshot) isBranchMessage_BranchMessage() {}

func (m *BranchMessage) GetBranchMessage() isBranchMessage_BranchMessage {
	if m != nil {
		return m.BranchMessage
	}
	return nil
}

func (m *BranchMessage) GetInitBranch() *InitBranch {
	if x, ok := m.GetBranchMessage().(*BranchMessage_InitBranch); ok {
		return x.InitBranch
	}
	return nil
}

func (m *BranchMessage) GetTransfer() *Transfer {
	if x, ok := m.GetBranchMessage().(*BranchMessage_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *BranchMessage) GetInitSnapshot() *InitSnapshot {
	if x, ok := m.GetBranchMessage().(*BranchMessage_InitSnapshot); ok {
		return x.InitSnapshot
	}
	return nil
}

func (m *BranchMessage) GetMarker() *Marker {
	if x, ok := m.GetBranchMessage().(*BranchMessage_Marker); ok {
		return x.Marker
	}
	return nil
}

func (m *BranchMessage) GetRetrieveSnapshot() *RetrieveSnapshot {
	if x, ok := m.GetBranchMessage().(*BranchMessage_RetrieveSnapshot); ok {
		return x.RetrieveSnapshot
	}
	return nil
}

func (m *BranchMessage) GetReturnSnapshot() *ReturnSnapshot {
	if x, ok := m.GetBranchMessage().(*BranchMessage_ReturnSnapshot); ok {
		return x.ReturnSnapshot
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BranchMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BranchMessage_OneofMarshaler, _BranchMessage_OneofUnmarshaler, _BranchMessage_OneofSizer, []interface{}{
		(*BranchMessage_InitBranch)(nil),
		(*BranchMessage_Transfer)(nil),
		(*BranchMessage_InitSnapshot)(nil),
		(*BranchMessage_Marker)(nil),
		(*BranchMessage_RetrieveSnapshot)(nil),
		(*BranchMessage_ReturnSnapshot)(nil),
	}
}

func _BranchMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BranchMessage)
	// branch_message
	switch x := m.BranchMessage.(type) {
	case *BranchMessage_InitBranch:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InitBranch); err != nil {
			return err
		}
	case *BranchMessage_Transfer:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *BranchMessage_InitSnapshot:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InitSnapshot); err != nil {
			return err
		}
	case *BranchMessage_Marker:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Marker); err != nil {
			return err
		}
	case *BranchMessage_RetrieveSnapshot:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RetrieveSnapshot); err != nil {
			return err
		}
	case *BranchMessage_ReturnSnapshot:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReturnSnapshot); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BranchMessage.BranchMessage has unexpected type %T", x)
	}
	return nil
}

func _BranchMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BranchMessage)
	switch tag {
	case 1: // branch_message.init_branch
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InitBranch)
		err := b.DecodeMessage(msg)
		m.BranchMessage = &BranchMessage_InitBranch{msg}
		return true, err
	case 2: // branch_message.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Transfer)
		err := b.DecodeMessage(msg)
		m.BranchMessage = &BranchMessage_Transfer{msg}
		return true, err
	case 3: // branch_message.init_snapshot
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(InitSnapshot)
		err := b.DecodeMessage(msg)
		m.BranchMessage = &BranchMessage_InitSnapshot{msg}
		return true, err
	case 4: // branch_message.marker
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Marker)
		err := b.DecodeMessage(msg)
		m.BranchMessage = &BranchMessage_Marker{msg}
		return true, err
	case 5: // branch_message.retrieve_snapshot
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RetrieveSnapshot)
		err := b.DecodeMessage(msg)
		m.BranchMessage = &BranchMessage_RetrieveSnapshot{msg}
		return true, err
	case 6: // branch_message.return_snapshot
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReturnSnapshot)
		err := b.DecodeMessage(msg)
		m.BranchMessage = &BranchMessage_ReturnSnapshot{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BranchMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BranchMessage)
	// branch_message
	switch x := m.BranchMessage.(type) {
	case *BranchMessage_InitBranch:
		s := proto.Size(x.InitBranch)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BranchMessage_Transfer:
		s := proto.Size(x.Transfer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BranchMessage_InitSnapshot:
		s := proto.Size(x.InitSnapshot)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BranchMessage_Marker:
		s := proto.Size(x.Marker)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BranchMessage_RetrieveSnapshot:
		s := proto.Size(x.RetrieveSnapshot)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BranchMessage_ReturnSnapshot:
		s := proto.Size(x.ReturnSnapshot)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*InitBranch)(nil), "InitBranch")
	proto.RegisterType((*InitBranch_Branch)(nil), "InitBranch.Branch")
	proto.RegisterType((*Transfer)(nil), "Transfer")
	proto.RegisterType((*InitSnapshot)(nil), "InitSnapshot")
	proto.RegisterType((*Marker)(nil), "Marker")
	proto.RegisterType((*RetrieveSnapshot)(nil), "RetrieveSnapshot")
	proto.RegisterType((*ReturnSnapshot)(nil), "ReturnSnapshot")
	proto.RegisterType((*ReturnSnapshot_LocalSnapshot)(nil), "ReturnSnapshot.LocalSnapshot")
	proto.RegisterType((*BranchMessage)(nil), "BranchMessage")
}

func init() { proto.RegisterFile("bank.proto", fileDescriptor_a6371916d5cb63b4) }

var fileDescriptor_a6371916d5cb63b4 = []byte{
	// 474 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xbd, 0x6e, 0xdb, 0x30,
	0x10, 0x96, 0xa5, 0x44, 0x89, 0x4f, 0x96, 0xe2, 0x10, 0x1d, 0x84, 0x00, 0x46, 0x5d, 0x75, 0xa8,
	0x27, 0x16, 0x70, 0xda, 0xa5, 0x53, 0x60, 0x74, 0x50, 0x80, 0x66, 0x61, 0x3a, 0x57, 0xa0, 0x65,
	0x36, 0x26, 0x4c, 0x53, 0x02, 0xc9, 0x16, 0xe8, 0xd3, 0xf4, 0x71, 0x3a, 0xf7, 0x8d, 0x0a, 0x93,
	0x94, 0x2d, 0xbb, 0x43, 0x0b, 0x64, 0xd2, 0xfd, 0x7c, 0xf7, 0xdd, 0xf1, 0xee, 0x13, 0xc0, 0x92,
	0xca, 0x0d, 0x6e, 0x55, 0x63, 0x9a, 0xe2, 0xe7, 0x00, 0xe0, 0x5e, 0x72, 0xb3, 0x50, 0x54, 0xd6,
	0x6b, 0x94, 0xc3, 0xc5, 0x92, 0x0a, 0x2a, 0x6b, 0x96, 0x0f, 0xa6, 0x83, 0x59, 0x4a, 0x3a, 0x17,
	0xbd, 0x87, 0x11, 0x15, 0xa2, 0x5a, 0x5a, 0x1c, 0xd3, 0x79, 0x38, 0x8d, 0x66, 0xc9, 0x1c, 0xe1,
	0x43, 0x31, 0x76, 0x1f, 0x92, 0x50, 0x21, 0x16, 0x1e, 0x76, 0x73, 0x07, 0xb1, 0xa7, 0x46, 0x70,
	0x26, 0xe9, 0xd6, 0xf1, 0x0e, 0x89, 0xb5, 0x51, 0x06, 0x21, 0x6f, 0xf3, 0xd0, 0x46, 0x42, 0xde,
	0xee, 0x30, 0x6d, 0xa3, 0x4c, 0x1e, 0xd9, 0xde, 0xd6, 0x2e, 0xbe, 0xc0, 0xe5, 0x67, 0x45, 0xa5,
	0xfe, 0xca, 0x14, 0x9a, 0x00, 0x68, 0x55, 0xfb, 0x21, 0x3c, 0xd3, 0x50, 0xab, 0xda, 0xb7, 0x98,
	0x00, 0xac, 0xb4, 0xe9, 0xd2, 0x8e, 0x76, 0xb8, 0xd2, 0xdd, 0xe3, 0x5e, 0xc0, 0xf9, 0xb6, 0x91,
	0xec, 0x87, 0xa7, 0x77, 0x4e, 0xf1, 0x16, 0x46, 0xbb, 0x37, 0x3c, 0x4a, 0xda, 0xea, 0x75, 0x63,
	0xd0, 0x4b, 0x48, 0xb4, 0xb7, 0x2b, 0xbe, 0xf2, 0x6b, 0x80, 0x2e, 0x74, 0xbf, 0x2a, 0x9e, 0x20,
	0x7e, 0xa0, 0x6a, 0xf3, 0xec, 0x71, 0x4e, 0x1a, 0x45, 0x7f, 0x35, 0xba, 0x85, 0x31, 0x61, 0x46,
	0x71, 0xf6, 0x9d, 0xfd, 0xff, 0x74, 0xbf, 0x06, 0x90, 0x11, 0x66, 0xbe, 0x29, 0xb9, 0xaf, 0xf9,
	0x08, 0x99, 0x68, 0x6a, 0x2a, 0xaa, 0x0e, 0x66, 0xcb, 0x92, 0xf9, 0x04, 0x1f, 0x03, 0xf1, 0xa7,
	0x1d, 0xaa, 0xf3, 0x48, 0x2a, 0xfa, 0xee, 0x4d, 0x03, 0xe9, 0x51, 0xfe, 0x9f, 0xa3, 0xf4, 0xc5,
	0x14, 0x1e, 0x8b, 0xe9, 0x35, 0xa4, 0xf5, 0x9a, 0x4a, 0xc9, 0x44, 0xa5, 0x0d, 0x35, 0x2c, 0x8f,
	0xa6, 0xd1, 0x2c, 0x25, 0x23, 0x1f, 0x7c, 0xdc, 0xc5, 0x8a, 0xdf, 0x21, 0xa4, 0x6e, 0x55, 0x0f,
	0x4c, 0x6b, 0xfa, 0xc4, 0x10, 0x86, 0x84, 0x4b, 0x6e, 0xfa, 0x0b, 0x4f, 0xe6, 0x49, 0x4f, 0x82,
	0x65, 0x40, 0x80, 0x1f, 0xd4, 0xfc, 0x06, 0x2e, 0x8d, 0x97, 0x8e, 0x9d, 0x20, 0x99, 0x0f, 0x71,
	0xa7, 0xa5, 0x32, 0x20, 0xfb, 0x24, 0x7a, 0x07, 0xa9, 0x25, 0xde, 0x2f, 0x28, 0xb2, 0xe8, 0x14,
	0xf7, 0x95, 0x51, 0x06, 0x64, 0xc4, 0xfb, 0x4a, 0x79, 0x05, 0xf1, 0xd6, 0x0a, 0x21, 0x3f, 0xb3,
	0xf0, 0x0b, 0xec, 0x74, 0x51, 0x06, 0xc4, 0x27, 0xd0, 0x1d, 0x5c, 0x2b, 0x7f, 0xc2, 0x03, 0xf9,
	0xb9, 0x45, 0x5f, 0xe3, 0xd3, 0xe3, 0x96, 0x01, 0x19, 0xab, 0xd3, 0x83, 0x7f, 0x80, 0x2b, 0x65,
	0xaf, 0x74, 0xa8, 0x8f, 0x6d, 0xfd, 0xd5, 0xc9, 0xf5, 0xca, 0x80, 0x64, 0xea, 0x28, 0xb2, 0x18,
	0x43, 0xe6, 0x56, 0x55, 0x6d, 0xdd, 0x06, 0x97, 0xb1, 0xfd, 0xeb, 0x6f, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x16, 0x29, 0x0c, 0x08, 0x03, 0x04, 0x00, 0x00,
}
